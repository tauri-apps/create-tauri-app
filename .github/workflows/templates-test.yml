# Copyright 2019-2022 Tauri Programme within The Commons Conservancy
# SPDX-License-Identifier: Apache-2.0
# SPDX-License-Identifier: MIT

name: test create-tauri-app templates

on:
  pull_request:
    paths:
      - '.github/workflows/templates-test.yml'
      - 'packages/cli/**'

env:
  RUST_BACKTRACE: 1

concurrency:
   group: ${{ github.workflow }}-${{ github.ref }}
   cancel-in-progress: true

jobs:
  build-cli:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - uses: actions/checkout@v2
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo build --release --pacakge create-tauri-app

      - name: add cli to .tar archive
        run: tar -rf create-tauri-app.tar target/release/cargo-create-tauri-app

      - name: upload cli artifact
        uses: actions/upload-artifact@v3
        with:
          name: create-tauri-app
          path: create-tauri-app.tar
          if-no-files-found: error

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v29.0.1

      - name: set matrix
        id: set-matrix
        shell: bash
        run: |
          OUT="$(node .scripts/generate-templates-matrix.js ${{ steps.changed-files.outputs.all_changed_files }})"
          echo "::set-output name=matrix::$OUT"

  test:
    needs: build-cli
    runs-on: ubuntu-latest
    if: ${{ needs.build-cli.outputs.matrix != '[]' && needs.build-cli.outputs.matrix != '' }}
    strategy:
      fail-fast: false
      matrix:
        settings: ${{ fromJson(needs.build-cli.outputs.matrix) }}

    name: ${{ matrix.settings.manager }} - ${{ matrix.settings.template }}
    steps:
      - uses: pnpm/action-setup@v2.2.2
        if: matrix.settings.manager == 'pnpm'
        with:
          version: 7

      - name: Install Node.js@16
        if: matrix.settings.manager != 'cargo'
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - uses: dtolnay/rust-toolchain@stable

      - run: cargo install tauri-cli
        if: matrix.settings.manager == 'cargo'

      - run: |
          rustup target add wasm32-unknown-unknown
          cargo install --locked trunk
        if: matrix.settings.template == 'yew'

      - name: download cli artifact
        uses: actions/download-artifact@v3

      - run: tar -xf create-tauri-app/create-tauri-app.tar

      - name: bootstrap a ${{ matrix.settings.template }} project
        run: ./target/release/cargo-create-tauri-app tauri-app -m ${{ matrix.settings.manager }} -t ${{ matrix.settings.template }} -y

      - run: sed -i 's/com.tauri.dev/com.create-tauri-app.dev/g' **/tauri.conf.json
        working-directory: tauri-app

      - run: ${{ matrix.settings.install_cmd }}
        if: matrix.settings.install_cmd  != ''
        working-directory: tauri-app

      - name: install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libayatana-appindicator3-dev librsvg2-dev patchelf

      - run: ${{ matrix.settings.run_cmd }} tauri build -b none
        if: matrix.settings.manager != 'npm'
        working-directory: tauri-app

      - run: ${{ matrix.settings.run_cmd }} tauri build -- -b none
        if: matrix.settings.manager == 'npm'
        working-directory: tauri-app
