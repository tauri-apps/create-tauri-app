# Copyright 2019-2022 Tauri Programme within The Commons Conservancy
# SPDX-License-Identifier: Apache-2.0
# SPDX-License-Identifier: MIT

name: publish napi modules

env:
  DEBUG: napi:*
  APP_NAME: create-tauri-app
  MACOSX_DEPLOYMENT_TARGET: '10.13'

on:
  workflow_dispatch:
    inputs:
      releaseId:
        description: 'Release Id'
        required: true
        type: string
  repository_dispatch:
    types: [publish-napi]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-latest
            target: 'x86_64-apple-darwin'
            build: pnpm build --platform --target x86_64-apple-darwin
          - host: macos-latest
            target: 'aarch64-apple-darwin'
            build: pnpm build --platform --target aarch64-apple-darwin
          - host: windows-latest
            build: pnpm build --platform
            target: 'x86_64-pc-windows-msvc'
          - host: windows-latest
            build: pnpm build --platform --target i686-pc-windows-msvc
            target: 'i686-pc-windows-msvc'
          - host: windows-latest
            target: 'aarch64-pc-windows-msvc'
            build: pnpm build --platform --target aarch64-pc-windows-msvc
          - host: ubuntu-latest
            target: 'x86_64-unknown-linux-gnu'
            build: pnpm build --platform --target x86_64-unknown-linux-gnu --use-napi-cross
          - host: ubuntu-latest
            target: 'x86_64-unknown-linux-musl'
            build: pnpm build --platform --target x86_64-unknown-linux-musl -x
          - host: ubuntu-latest
            target: 'armv7-unknown-linux-gnueabihf'
            build: pnpm build --platform --target armv7-unknown-linux-gnueabihf --use-napi-cross
          - host: ubuntu-latest
            target: 'aarch64-unknown-linux-gnu'
            build: pnpm build --platform --target aarch64-unknown-linux-gnu --use-napi-cross
          - host: ubuntu-latest
            target: 'aarch64-unknown-linux-musl'
            build: pnpm build --platform --target aarch64-unknown-linux-musl -x

    name: stable - ${{ matrix.settings.target }} - node@20
    runs-on: ${{ matrix.settings.host }}

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 9
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.settings.target }}

      - name: Cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ~/.napi-rs
            .cargo-cache
            target/
          key: ${{ matrix.settings.target }}-cargo-${{ matrix.settings.host }}

      - uses: goto-bus-stop/setup-zig@v2
        if: ${{ contains(matrix.settings.target, 'musl') }}
        with:
          version: 0.12.0

      - name: Setup node x86
        if: matrix.settings.target == 'i686-pc-windows-msvc'
        run: pnpm config set supportedArchitectures.cpu "ia32"
        shell: bash

      - name: 'Install dependencies'
        run: pnpm install

      - name: Setup node x86
        uses: actions/setup-node@v4
        if: matrix.settings.target == 'i686-pc-windows-msvc'
        with:
          node-version: 20
          architecture: x86

      - name: 'Build'
        run: ${{ matrix.settings.build }}
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: napi-${{ matrix.settings.target }}
          path: node/${{ env.APP_NAME }}.*.node
          if-no-files-found: error

  build-universal-macOS:
    name: Build universal macOS binary
    defaults:
      run:
        working-directory: node
    needs:
      - build
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: 'Install dependencies'
        run: pnpm install -w --filter .

      - name: Download macOS x64 artifact
        uses: actions/download-artifact@v4
        with:
          name: bindings-x86_64-apple-darwin
          path: .
      - name: Download macOS arm64 artifact
        uses: actions/download-artifact@v4
        with:
          name: bindings-aarch64-apple-darwin
          path: .

      - name: Combine binaries
        run: pnpm napi universalize

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: napi-universal-apple-darwin
          path: "${{ env.APP_NAME }}.*.node"
          if-no-files-found: error

  publish:
    name: Publish
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: node
    needs:
      - build-universal-macOS

    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 8
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install -w --filter .

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: node/artifacts

      - name: Move artifacts
        run: pnpm artifacts

      - name: List packages
        run: ls -R ./npm
        shell: bash

      - name: Publish
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
          npm publish
          jq '.name = "create-tauri" | .bin = { "create-tauri": .bin["create-tauri-app"] } |  del(.scripts.prepublishOnly)' package.json > package.tmp
          mv -f package.tmp package.json
          npm publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.ORG_NPM_TOKEN }}
          RELEASE_ID: ${{ github.event.client_payload.releaseId || inputs.releaseId }}
